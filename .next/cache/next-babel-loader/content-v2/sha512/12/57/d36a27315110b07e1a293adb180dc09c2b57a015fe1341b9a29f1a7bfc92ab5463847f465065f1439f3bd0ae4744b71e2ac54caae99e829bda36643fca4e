{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neilbarry/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_DATA = [{\n  title: \"Sydney\",\n  description: \"Beautiful Australian City\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg\",\n  id: \"m1\",\n  address: \"16 Baralga Crescent\"\n}, {\n  title: \"Toronto\",\n  description: \"Beautiful Canadian City\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/b/b5/Toronto_Skyline_2017.jpg\",\n  id: \"m2\",\n  address: \"125 Blue Jays Way\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  //Fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://Neil:qwerty1234@cluster0.8ctb0.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/neilbarry/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["React","Head","MeetupList","MongoClient","DUMMY_DATA","title","description","image","id","address","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,WAAW,EAAE,2BAFf;AAGEC,EAAAA,KAAK,EACH,uHAJJ;AAKEC,EAAAA,EAAE,EAAE,IALN;AAMEC,EAAAA,OAAO,EAAE;AANX,CADiB,EASjB;AACEJ,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,WAAW,EAAE,yBAFf;AAGEC,EAAAA,KAAK,EACH,8EAJJ;AAKEC,EAAAA,EAAE,EAAE,IALN;AAMEC,EAAAA,OAAO,EAAE;AANX,CATiB,CAAnB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChClB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KADkB;AAEhCI,QAAAA,OAAO,EAAEc,MAAM,CAACd,OAFgB;AAGhCF,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHkB;AAIhCC,QAAAA,EAAE,EAAEe,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAehB,QAAf","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\n\nconst DUMMY_DATA = [\n  {\n    title: \"Sydney\",\n    description: \"Beautiful Australian City\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/5/53/Sydney_Opera_House_and_Harbour_Bridge_Dusk_%282%29_2019-06-21.jpg\",\n    id: \"m1\",\n    address: \"16 Baralga Crescent\",\n  },\n  {\n    title: \"Toronto\",\n    description: \"Beautiful Canadian City\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/b/b5/Toronto_Skyline_2017.jpg\",\n    id: \"m2\",\n    address: \"125 Blue Jays Way\",\n  },\n];\n\nconst HomePage = (props) => {\n  return <MeetupList meetups={props.meetups} />;\n};\n\nexport async function getStaticProps() {\n  //Fetch data from API\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Neil:qwerty1234@cluster0.8ctb0.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}